# -*- coding: utf-8 -*-
"""Super_Cashier_Entry.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FwX5HrGpM8xKnUxqn9TKi80zCqai5s-o
"""

import pandas from pd
from tabulate import tabulate #to create table form

class Transaction:
      def __init__(self,customer_ID):
        "Berikut isi ID Customer Anda"
        self.items = pd.DataFrame(columns=['Item','Jumlah Item','Harga Satuan','Harga Total'])
        self.total = 0
        self.customer_ID = customer_ID

      def add_keranjang(self,nama_item,harga_satuan,jumlah=1):
        harga_satuan = harga_satuan
        harga_total = harga_satuan * jumlah
        self.total += item_total
        item_data ={'Item': nama_item, 'Jumlah Item':jumlah, 'Harga Satuan':harga_satuan,'Harga Total':harga_total}
        self.items = self.items.append(item_data, ignore_index=True)

      def edit_keranjang(self,index_item):
        if index_item >= 0 and index_item < len(self.items):
          nama_item = input("Masukkan nama item terupdate:")
          jumlah = int(input("Masukkan jumlah item terupdate:"))
          harga_satuan = float(input("Masukkan harga item terupdate:"))

          total_lama = self.items.loc[index_item,'Total Harga']
          total_baru = harga_satuan * jumlah
          self.total = self.total - total_lama + total_baru

          self.items.loc[index_item, 'Item'] = item_name
          self.items.loc[index_item, 'Jumlah'] = jumlah
          self.items.loc[index_item, 'Harga Satuan'] = harga_satuan
          self.items.loc[index_item, 'Nama Item'] = item_name

          print("Item telah terbarui")
       else:
        print("Kesalahan dalam Pengisian Index Item")

     def bukti_transaksi(self):
      print("----BUKTI BELANJA-----")
      print(f"ID Konsumen :{self.customer_id}")
      print(tabulate(self.items,headers='keys',tablefmt='psql',showindex=False))

#display interactive
  customer_id = input("Ini Nomor Customer_ID: ")
  receipt = Receipt(customer_id)

import pandas from pd
from tabulate import tabulate #to create table form

class Transaction:
      def __init__(self,customer_ID):
        "Berikut isi ID Customer Anda"
        self.items = pd.DataFrame(columns=['Item','Jumlah Item','Harga Satuan','Harga Total'])
        self.total = 0
        self.customer_ID = customer_ID

      def add_item(self,nama_item,harga_satuan,jumlah=1):
        if nama_item and harga_satuan dan jumlah:
            harga_satuan = harga_satuan
            harga_total = harga_satuan * jumlah
            self.total += harga_total
            item_data ={'Item': nama_item, 'Jumlah Item':jumlah, 'Harga Satuan':harga_satuan,'Harga Total':harga_total}
            self.items = self.items.append(item_data, ignore_index=True)

        else:
          print("Terdapat Kesalahan Input Data")


      def update_item_name(self, nama_item, nama_item_baru):
        index_item = self.items.loc[self.items['Item'] == nama_item].index
        if len(index_item) > 0:
            for item_index in index_item:
                self.items.loc[index_item, 'Item'] = nama_item_baru
            print("Nama Item telah Diubah")
        else:
            print("Item tidak ditemukan.")

      def update_item_qty(self, nama_item, jumlah_baru):
        index_item = self.items.loc[self.items['Item'] == nama_item].index
        if len(index_item) > 0:
            for item_index in index_item:
                jumlah_lama = self.items.loc[item_index, 'Jumlah']
                Total_lama = self.items.loc[item_index, 'Total Harga']
                Total_baru = (Total_lama / jumlah_lama) * jumlah_baru
                self.items.loc[item_index, 'Quantity'] = jumlah_baru
                self.items.loc[item_index, 'Total Price'] = Total_baru
                self.total = self.total - Total_lama + Total_baru
            print("Jumlah Barang Telah Diperbarui.")
        else:
            print("Item tidak ditemukan.")

      def update_item_price(self, nama_item, harga_baru):
        index_item = self.items.loc[self.items['Item Name'] == item_name].index
        if len(index_item) > 0:
            for item_index in index_item:
                harga_lama = self.items.loc[item_index, 'Harga Satuan']
                total_lama = self.items.loc[item_index, 'Harga Total']
                harga_baru = (total_lama / harga_lama) * harga_baru
                self.items.loc[item_index, 'Harga Satuan'] = harga_baru
                self.items.loc[item_index, 'Harga Total'] = Total_baru
                self.total = self.total - total_lama + Total_baru
            print("Harga telah di update.")
        else:
            print("Item tidak ditemukan.")

      def delete_item(self, item_index):
        index_item = self.items.loc[self.items['Item'] == nama_item].index
        if len(index_item) > 0:
            for item_index in index_item:
                item_total = self.items.loc[item_index, 'Harga Total']
                self.total -= item_total
                self.items = self.items.drop(item_index).reset_index(drop=True)
                print("Item telah dibuang.")
        else:
            print("Item tidak ditemukan.")

      def reset_transaction(self):
        self.items = pd.DataFrame(columns=['Item','Jumlah Item','Harga Satuan','Harga Total'])
        self.total = 0
        print("Transaksi telah di-reset.")

      def diskon(self):
        if self.total > 200000:
            discount = self.total * 0.05
            self.total -= discount
            print(f"Total harga belanjaan setelah mendapat diskon 5%: Rp{self.total:.2f}")
        if self.total > 300000:
            discount = self.total * 0.08
            self.total -= discount
            print(f"Total harga belanjaan setelah mendapat diskon 8%: Rp{self.total:.2f}")
        if self.total > 500000:
            discount = self.total * 0.1
            self.total -= discount
            print(f"Total harga belanjaan setelah mendapat diskon 10%: Rp{self.total:.2f}")
        else:
        else:
            print("Discount not applicable.")

      def bukti_transaksi(self):
        print("----BUKTI BELANJA-----")
        print(f"ID Konsumen :{self.customer_id}")
        print(tabulate(self.items,headers='keys',tablefmt='psql',showindex=False))
        print("-----------------")
        print(f"Total:Rp.\t\t\t\t\t{self.total}")

#display interactive
  customer_id = input("Ini Nomor Customer_ID: ")
  receipt = Receipt(customer_id)

  while True:
    print("\n.......Main Menu------------")
    print("1. Masukkan Item")
    print("2. Update Item Name")
    print("3. Update Item Quantity")
    print("4. Update Item Price")
    print("5. Remove Item")
    print("6. Reset Transaksi")
    print("8. Apply Discount")
    print("9. Preview Nota")
    print("10. Selesai")
    choice = input("Enter your choice (1-10): ")

    if choice == '1':
        while True:
            nama_item = input("Masukkan Nama ITem: ")
            harga_satuan = None
            while harga_satuan is None:
                try:
                    harga_satuan = float(input("Masukkan Harga: "))
                except ValueError:
                    print("Harga Invalid. Mohon coba ulang.")
            quantity = None
            while quantity is None:
                try:
                    quantity = int(input("Masukkan Jummlah: "))
                except ValueError:
                    print("Jumlah Invalid. Mohon coba ulang")
            receipt.add_item(nama_item, harga_satuan, quantity)

            continue_adding = input("Add another item? (y/n): ")
            if continue_adding.lower() != 'y':
                break

    # Apply discount automatically if total exceeds 200000
            receipt.apply_discount()

    elif choice == '2':
        nama_item = input("Masukkan nama item: ")
        nama_item_baru = input("Masukkan nama baru dari item: ")
        receipt.update_item_name(nama_item, nama_item_baru)
    elif choice == '3':
        nama_item = input("Masukkan nama item: ")
        new_quantity = int(input("Masukkan jumlah baru dari item: "))
        receipt.update_item_quantity(nama_item, jumlah_baru)
    elif choice == '4':
        nama_item = input("Masukkan nama item: ")
        new_price = float(input("Masukkan harga baru dari item: "))
        receipt.update_item_price(nama_item, harga_baru)
    elif choice == '5':
        nama_item = input("Masukkan nama item yang akan dibuang: ")
        receipt.remove_item(nama_item)
    elif choice == '6':
        receipt.reset_transaction()